{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchBooks = createAsyncThunk('book/fetchBooks', async (_, thunkAPI) => {\n  try {\n    const result = await fetch('http://localhost:3005/books');\n    return result.json();\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst bookSlice = createSlice({\n  name: 'book',\n  initialState: {\n    books: null,\n    isLoading: false\n  },\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchBooks.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchBooks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      console.log(action);\n    });\n    builder.addCase(fetchBooks.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.payload);\n    });\n  }\n\n});\nexport const bookReducer = bookSlice.reducer;","map":{"version":3,"sources":["/Users/mohammedhussam/Desktop/Redux/book-store-rtk/book-store-app/src/store/bookSlice.js"],"names":["createSlice","createAsyncThunk","fetchBooks","_","thunkAPI","result","fetch","json","error","console","log","bookSlice","name","initialState","books","isLoading","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","rejected","payload","bookReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CACxC,iBADwC,EAExC,OAAOE,CAAP,EAAUC,QAAV,KAAuB;AACrB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA1B;AACA,WAAOD,MAAM,CAACE,IAAP,EAAP;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CATuC,CAAnC;AAYP,MAAMG,SAAS,GAAGX,WAAW,CAAC;AAC5BY,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GAFc;AAG5BC,EAAAA,QAAQ,EAAE,EAHkB;;AAI5BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,UAAU,CAACkB,OAA3B,EAAoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,KAFD;AAIAG,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,UAAU,CAACqB,SAA3B,EAAsC,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACvDD,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;AACD,KAHD;AAKAJ,IAAAA,OAAO,CAACC,OAAR,CAAgBjB,UAAU,CAACsB,QAA3B,EAAqC,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACtDD,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAM,CAACG,OAAnB;AACD,KAHD;AAID;;AAlB2B,CAAD,CAA7B;AAqBA,OAAO,MAAMC,WAAW,GAAGf,SAAS,CAACgB,OAA9B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchBooks = createAsyncThunk(\n  'book/fetchBooks',\n  async (_, thunkAPI) => {\n    try {\n      const result = await fetch('http://localhost:3005/books');\n      return result.json();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nconst bookSlice = createSlice({\n  name: 'book',\n  initialState: { books: null, isLoading: false },\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchBooks.pending, (state, action) => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(fetchBooks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      console.log(action);\n    });\n\n    builder.addCase(fetchBooks.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.payload);\n    });\n  },\n});\n\nexport const bookReducer = bookSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}